<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="BestOffers" xml:space="preserve">
    <value>Best Offers</value>
  </data>
  <data name="Blog" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="CheckTopTours" xml:space="preserve">
    <value>Check out our top-rated tours</value>
  </data>
  <data name="CountOfTourist" xml:space="preserve">
    <value>Count of Tourist</value>
  </data>
  <data name="CountOfTouristRange" xml:space="preserve">
    <value>can be from 1 up to 1000</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FailedSubscriptionMessage" xml:space="preserve">
    <value>Sbscription action failed.</value>
  </data>
  <data name="FilterByCategory" xml:space="preserve">
    <value>- filter by category -</value>
  </data>
  <data name="FilterByCountry" xml:space="preserve">
    <value>- filter by country -</value>
  </data>
  <data name="FindPerfectTour" xml:space="preserve">
    <value>FIND YOUR PERFECT TOUR</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Your Name</value>
  </data>
  <data name="FullNameLength" xml:space="preserve">
    <value>enter a name (3 up to 100 symbols)</value>
  </data>
  <data name="GetBestOffers" xml:space="preserve">
    <value>Get the best offers first!</value>
  </data>
  <data name="LetsBook" xml:space="preserve">
    <value>Let us book your next trip!</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageFailed" xml:space="preserve">
    <value>Failed to send the message</value>
  </data>
  <data name="MessageLength" xml:space="preserve">
    <value>enter a message (0 up to 1000 symbols)</value>
  </data>
  <data name="MessageSent" xml:space="preserve">
    <value>Message successfully sent</value>
  </data>
  <data name="Min10" xml:space="preserve">
    <value>minimum 10 symbols</value>
  </data>
  <data name="Min3" xml:space="preserve">
    <value>minimum 3 symbols</value>
  </data>
  <data name="MustBeDate" xml:space="preserve">
    <value>enter a date (Month/Day/Year)</value>
  </data>
  <data name="MustBeEmail" xml:space="preserve">
    <value>enter an email</value>
  </data>
  <data name="Night" xml:space="preserve">
    <value>night</value>
  </data>
  <data name="Nights" xml:space="preserve">
    <value>nights</value>
  </data>
  <data name="Nights2" xml:space="preserve">
    <value>nights</value>
  </data>
  <data name="NoTourFound" xml:space="preserve">
    <value>No tour found for the selected filtering. Please try to change filtering criterias.</value>
  </data>
  <data name="OtherContacts" xml:space="preserve">
    <value>Other Contacts</value>
  </data>
  <data name="Perfection1" xml:space="preserve">
    <value>Find Travel Perfection With the</value>
  </data>
  <data name="Perfection2" xml:space="preserve">
    <value>Professionalism of Experts</value>
  </data>
  <data name="RelatedTours" xml:space="preserve">
    <value>SEE ALSO</value>
  </data>
  <data name="RequestSent" xml:space="preserve">
    <value>Request Sent! Thank You.</value>
  </data>
  <data name="RequestTour" xml:space="preserve">
    <value>Request Tour</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>required</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SendMessage" xml:space="preserve">
    <value>SEND MESSAGE</value>
  </data>
  <data name="SubScribe" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="SubscriptionMessage" xml:space="preserve">
    <value>Thank you for joining our newsletter.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TitleLength" xml:space="preserve">
    <value>enter a title (3 up to 100 symbols)</value>
  </data>
  <data name="TourDate" xml:space="preserve">
    <value>Visit Date (Month/Day/Year)</value>
  </data>
  <data name="Tours" xml:space="preserve">
    <value>Tours</value>
  </data>
  <data name="ViewAllTours" xml:space="preserve">
    <value>VIEW ALL TOURS</value>
  </data>
  <data name="WeAreDifferent" xml:space="preserve">
    <value>Why We’re Different</value>
  </data>
</root>